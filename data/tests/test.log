Programa 'ficheroconfig', parseador de ficheros fconfig, Mar  8 2024

Invocaci√≥n del programa:

fconfigd.exe ..\..\tests\test.config

> Buscando el archivo de configuraci√≥n ..\..\tests\test.config
(Archivo ..\..\tests\test.config
	(4) > Buscando el archivo de configuraci√≥n ..\..\tests\test.config
	(Archivo ..\..\tests\test.config
	fin de la lectura del archivo ..\..\tests\test.config)

	(7) > Buscando el archivo de configuraci√≥n ..\..\tests\test.config
	(Archivo ..\..\tests\test.config
	fin de la lectura del archivo ..\..\tests\test.config)

	(7) > Buscando el archivo de configuraci√≥n ..\..\tests\test.config
	(Archivo ..\..\tests\test.config
		px [none] = { | a $(b) c | }
		pc [none] = {}
		px [none] = {}
		pc [none] = ccc
		pc= {a}
		pC [none] = a
		pc [none] = a
		pc [none] = {}
		pc [none] = a
		pC [none] = {}
		m [none] = {
		$(empty)   $(n)
		$$(n)
		}
		M [none] = {
		   $(n)
		$(n)
		}
	fin de la lectura del archivo ..\..\tests\test.config)

	(90) > Buscando el archivo de configuraci√≥n ..\..\tests\otro.config
	(Archivo ..\..\tests\otro.config
		(4) Error: No se encontr√≥ el par√©ntesis de cierre correspondiente al '(' de apertura: (
		            Al expandir la asignaci√≥n: b = $(
		(4) b = {}
		(5) logonline on
		(6) Expandiendo la variable off ...
			expansi√≥n:  
		(6) logonline
		(11) a = {
		asdas
		fdgf
		}n
		(13) show
		a [none] = {
		asdas
		fdgf
		}n
		(14) Expandiendo la variable asads ...
			La variable no existe. La expansi√≥n es vac√≠a.
		(14) logonline off
		(16) showall
SYSTEM [none] = Win
a [none] = {
asdas
fdgf
}n
texto [none] = ccc$(b)aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa..........................
b [none] = {}
$ [none] = BBB
px [none] = {}
pc [none] = a
n [none] = xxx
m [none] = {
   xxx
$(n)
}
v [none] = 3
pC [none] = {}
empty [none] = {}
empty2 [none] = {}
empty3 [none] = {}
comment [none] = %
L [none] = El siguiente comentario no se incluye:
LL [none] = El siguiente comentario no se incluye:M
_n [none] = $(n)
M [none] = {
   xxx
$(n)
}
off [none] = {}
		(18) loggingnone
		b [undefined]
		b [none] = {}
		(24) logcommands 1
		(26) ModoOverride 1
		(27) ModoOverride 0
		(28) Error: El valor a asignar a 'ModoOverride' es demasiado alto. Puede estar entre 0 y 1. Se encontr√≥ 2.
		(28) Warning: Palabras extra ignoradas tras el comando ModoOverride
		(30) logmacros 1
		(31) Error: El valor a asignar a 'logmacros' no es un n√∫mero entero: 3asdasd
		(32) Warning: El valor a asignar a 'logbranches' es demasiado alto. Puede estar entre 0 y 3. Se encontr√≥ 4.
		(32) logbranches 3
		(33) Error: Se encontr√≥ "logvars 2". Tras logvars se requiere un =.
		(34) Error: El valor a asignar a 'logvars' no es un n√∫mero entero: -1
		(35) Error: Se encontr√≥ "faadfdf 0". Tras un nombre de clave se requiere una asignaci√≥n.
		(37) logassigns 2
		(38) a =
		(39) ModoOverride 1
		(41) C =
		a [none] = 5
		C [none] = ccc
		(44) ModoOverride 0
		(45) a =
		a [none] = 4
	(5) a =
	(6) Elif
	(6)   Se empieza a saltar c√≥digo
	(8) Endif
	(10) If 0 = 1
	(10)   After expansion: 0 = 1
	(10)   Evaluates to false
	(19) Endif
	(21) If 1 = 1
	(21)   After expansion: 1 = 1
	(21)   Evaluates to true
	(23) texto :=
	(24) b =
	(25) $ =
	(26) Expandiendo la variable texto ...
		expansi√≥n: a $$(b) c 
	(26) Expandiendo la variable texto ...
		expansi√≥n: a $$(b) c 
	(26) Expandiendo la variable texto ...
		expansi√≥n: a $$(b) c 
	(26) Expandiendo la variable texto ...
		expansi√≥n: a $$(b) c 
	(26) Expandiendo la variable texto ...
		expansi√≥n: a $$(b) c 
	(26) px =
	(27) Expandiendo la variable $(b) ...
		La variable no existe. La expansi√≥n es vac√≠a.
	(27) pc =
	px [none] = { | a $(b) c | }
	pc [none] = {}
	(31) n :=
	(32) m =
	(33) texto :=
	(34) Expandiendo la variable texto ...
		expansi√≥n: ccc$(b)aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.......................... 
	(34) Expandiendo la variable n ...
		expansi√≥n: $(m) 
	(34) Expandiendo la variable m ...
		expansi√≥n:  1  
	(34) px =
	(35) Expandiendo la variable texto ...
		expansi√≥n: ccc$(b)aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.......................... 
	(35) Expandiendo la variable m ...
		expansi√≥n: 
	(35) Expandiendo la variable b ...
		expansi√≥n: xxx 
	(35) pc =
	(36) Expandiendo la variable texto ...
		expansi√≥n: ccc$(b)aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.......................... 
	(36) Expandiendo la variable b ...
		expansi√≥n: xxx 
	(36) pc =
	px [none] = {}
	pc [none] = ccc
	(40) v =
	(41) Expandiendo la variable v ...
		expansi√≥n: 3 
	(41) pc =
	(42) Expandiendo la variable pc ...
		expansi√≥n: {a} 
	pc= {a}
	(44) pC =
	pC [none] = a
	(46) pc =
	pc [none] = a
	(48) pc =
	pc [none] = {}
	(50) pc =
	pc [none] = a
	(52) pC =
	pC [none] = {}
	(55) Endif
	(57) empty =
	(59) Expandiendo la variable empty ...
		expansi√≥n:  
	(59) Expandiendo la variable empty2 ...
		expansi√≥n:  
	(60) empty2 =
	(62) empty3 =
	(64) comment =
	(65) L =
	(66) Expandiendo la variable L ...
		expansi√≥n: El siguiente comentario no se incluye: 
	(66) LL =
	(68) n =
	(72) m :=
	(74) _n :=
	(76) Expandiendo la variable empty ...
		expansi√≥n:  
	(76) Expandiendo la variable _n ...
		expansi√≥n: $(n) 
	(78) M =
	m [none] = {
	$(empty)   $(n)
	$$(n)
	}
	M [none] = {
	   $(n)
	$(n)
	}
	(82) n =
	(83) Expandiendo la variable m ...
		expansi√≥n: $(empty)   $(n)
$$(n)
 
	(83) Expandiendo la variable empty ...
		expansi√≥n:  
	(83) Expandiendo la variable n ...
		expansi√≥n: xxx 
	(83) m =
	(84) Expandiendo la variable m ...
		expansi√≥n:    xxx
$(n)
 
	(84) M =
	(85) If $(a) = yy
	(85) Expandiendo la variable a ...
		expansi√≥n: yy 
	(85)   After expansion: yy = yy
	(85)   Evaluates to true
	m [none] = {
	   xxx
	$(n)
	}
	M [none] = {
	   xxx
	$(n)
	}
	(88) Endif
	(90) jump otro.config
	(1) off =
	(2) loggingall
	(4) Error: No se encontr√≥ el par√©ntesis de cierre correspondiente al '(' de apertura: (
	            Al expandir la asignaci√≥n: b = $(
	(4) b = {}
	(5) logonline on
	(6) Expandiendo la variable off ...
		expansi√≥n:  
	(6) logonline
	(11) a = {
	asdas
	fdgf
	}n
	(13) show
	a [none] = {
	asdas
	fdgf
	}n
	(14) Expandiendo la variable asads ...
		La variable no existe. La expansi√≥n es vac√≠a.
	(14) logonline off
	(16) showall
SYSTEM [none] = Win
a [none] = {
asdas
fdgf
}n
texto [none] = ccc$(b)aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa..........................
$ [none] = BBB
px [none] = {}
pc [none] = a
n [none] = xxx
m [none] = {
   xxx
$(n)
}
v [none] = 3
pC [none] = {}
empty [none] = {}
empty2 [none] = {}
empty3 [none] = {}
comment [none] = %
L [none] = El siguiente comentario no se incluye:
LL [none] = El siguiente comentario no se incluye:M
_n [none] = $(n)
M [none] = {
   xxx
$(n)
}
off [none] = {}
b [none] = {}
C [none] = ccc
	(18) loggingnone
	b [undefined]
	b [none] = {}
	(24) logcommands 1
	(26) ModoOverride 1
	(27) ModoOverride 0
	(28) Error: El valor a asignar a 'ModoOverride' es demasiado alto. Puede estar entre 0 y 1. Se encontr√≥ 2.
	(28) Warning: Palabras extra ignoradas tras el comando ModoOverride
	(30) logmacros 1
	(31) Error: El valor a asignar a 'logmacros' no es un n√∫mero entero: 3asdasd
	(32) Warning: El valor a asignar a 'logbranches' es demasiado alto. Puede estar entre 0 y 3. Se encontr√≥ 4.
	(32) logbranches 3
	(33) Error: Se encontr√≥ "logvars 2". Tras logvars se requiere un =.
	(34) Error: El valor a asignar a 'logvars' no es un n√∫mero entero: -1
	(35) Error: Se encontr√≥ "faadfdf 0". Tras un nombre de clave se requiere una asignaci√≥n.
	(37) logassigns 2
	(38) a =
	(39) ModoOverride 1
	a [none] = 5
	C [none] = ccc
	(44) ModoOverride 0
	(45) a =
	a [none] = 4
Expandiendo la variable b ...
	expansi√≥n:  
Expandiendo la variable n ...
	expansi√≥n: xxx 
